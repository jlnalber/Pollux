<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlleSchließen" xml:space="preserve">
    <value>Alles Schließen</value>
  </data>
  <data name="AlleSpeichern" xml:space="preserve">
    <value>Alles Speichern</value>
  </data>
  <data name="Ansicht" xml:space="preserve">
    <value>Ansicht</value>
  </data>
  <data name="BaumTemplate_Header" xml:space="preserve">
    <value>Baum</value>
  </data>
  <data name="BaumTemplate_StufenText" xml:space="preserve">
    <value>Anzahl an Stufen:</value>
  </data>
  <data name="BaumTemplate_Text" xml:space="preserve">
    <value>Ein Baum mit m Stufen und n Verzweigungen pro Stufe.</value>
  </data>
  <data name="BaumTemplate_VerzweigungenText" xml:space="preserve">
    <value>Anzahl an Verzweigungen:</value>
  </data>
  <data name="Bearbeiten" xml:space="preserve">
    <value>Bearbeiten</value>
  </data>
  <data name="Bestätigen" xml:space="preserve">
    <value>Bestätigen</value>
  </data>
  <data name="BipartiterGraphTemplate_Header" xml:space="preserve">
    <value>Vollständiger bipartiter Graph</value>
  </data>
  <data name="BipartiterGraphTemplate_Knoten1Text" xml:space="preserve">
    <value>Anzahl an Knoten in erster Menge:</value>
  </data>
  <data name="BipartiterGraphTemplate_Knoten2Text" xml:space="preserve">
    <value>Anzahl an Knoten in zweiter Menge:</value>
  </data>
  <data name="BipartiterGraphTemplate_Text" xml:space="preserve">
    <value>Ein vollständiger bipartiter m-n-Graph.</value>
  </data>
  <data name="CircleTemplate_Header" xml:space="preserve">
    <value>Kreis</value>
  </data>
  <data name="CircleTemplate_KnotenText" xml:space="preserve">
    <value>Anzahl an Knoten:</value>
  </data>
  <data name="CircleTemplate_Text" xml:space="preserve">
    <value>Ein Kreis mit n-Knoten.</value>
  </data>
  <data name="Datei" xml:space="preserve">
    <value>Datei</value>
  </data>
  <data name="DateiÖffnen" xml:space="preserve">
    <value>Öffne eine Datei</value>
  </data>
  <data name="Eigenschaft" xml:space="preserve">
    <value>Eigenschaft</value>
  </data>
  <data name="Eigenschaften" xml:space="preserve">
    <value>Eigenschaften</value>
  </data>
  <data name="EigenschaftenFenster" xml:space="preserve">
    <value>Eigenschaften-Fenster</value>
  </data>
  <data name="EigenschaftenLaden" xml:space="preserve">
    <value>Lade die Eigenschaften des Graphen...</value>
  </data>
  <data name="Einstellungen" xml:space="preserve">
    <value>Einstellungen</value>
  </data>
  <data name="EinstellungsFenster" xml:space="preserve">
    <value>Einstellungen</value>
  </data>
  <data name="Erstelle" xml:space="preserve">
    <value>Erstellen</value>
  </data>
  <data name="ErstelleNeueDatei" xml:space="preserve">
    <value>Neue Datei erstellen:</value>
  </data>
  <data name="FehlermeldungBeschädigteDatei" xml:space="preserve">
    <value>Die Datei ist möglicherweise beschädigt oder unvollständig. Dadurch kann der Graph auch unvollständig sein.</value>
  </data>
  <data name="Fenster" xml:space="preserve">
    <value>Fenster</value>
  </data>
  <data name="GraphAuswahlHeader" xml:space="preserve">
    <value>Pollux - Neuen Graph hinzufügen</value>
  </data>
  <data name="GraphBearbeiten" xml:space="preserve">
    <value>Graph bearbeiten</value>
  </data>
  <data name="GraphErstellen" xml:space="preserve">
    <value>Erstelle einen neuen Graphen</value>
  </data>
  <data name="GraphLaden" xml:space="preserve">
    <value>Laden des Fensters...</value>
  </data>
  <data name="GraphÖffnen" xml:space="preserve">
    <value>Öffne einen Graphen (.poll-Datei)</value>
  </data>
  <data name="Hilfe" xml:space="preserve">
    <value>Hilfe</value>
  </data>
  <data name="HilfeDateiÖffnen" xml:space="preserve">
    <value>Bekomme Hilfe</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="Icon1" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Icon1.ico;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="KanteHinzufügen" xml:space="preserve">
    <value>Kante hinzufügen</value>
  </data>
  <data name="KantenEndeText" xml:space="preserve">
    <value>Ende:</value>
  </data>
  <data name="KantenLaden" xml:space="preserve">
    <value>Lade die Kanten des Graphen...</value>
  </data>
  <data name="KantenNameText" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="KantenParentText" xml:space="preserve">
    <value>Eltern:</value>
  </data>
  <data name="KantenPickerText" xml:space="preserve">
    <value>Auswahl Kante:</value>
  </data>
  <data name="KantenStartText" xml:space="preserve">
    <value>Start:</value>
  </data>
  <data name="KeineKanten" xml:space="preserve">
    <value>Sieht so aus als würde dieser Graph keine Knoten beinhalten!</value>
  </data>
  <data name="Knoten1" xml:space="preserve">
    <value>Erster Knoten:</value>
  </data>
  <data name="Knoten2" xml:space="preserve">
    <value>Zweiter Knoten:</value>
  </data>
  <data name="KnotenGradText" xml:space="preserve">
    <value>Grad:</value>
  </data>
  <data name="KnotenHinzufügen" xml:space="preserve">
    <value>Knoten hinzufügen</value>
  </data>
  <data name="KnotenKantenText" xml:space="preserve">
    <value>Kanten:</value>
  </data>
  <data name="KnotenNameText" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="KnotenParentText" xml:space="preserve">
    <value>Eltern:</value>
  </data>
  <data name="KnotenPickerText" xml:space="preserve">
    <value>Auswahl Knoten:</value>
  </data>
  <data name="KontenLaden" xml:space="preserve">
    <value>Lade die Knoten des Graphen...</value>
  </data>
  <data name="LetzteDateien" xml:space="preserve">
    <value>Zuletzt genutzte Dateien:</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="Neu" xml:space="preserve">
    <value>Neu</value>
  </data>
  <data name="NeueDateiName" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="NeuerTab" xml:space="preserve">
    <value>Neuer Tab</value>
  </data>
  <data name="NeuesFenster" xml:space="preserve">
    <value>Neues Fenster</value>
  </data>
  <data name="NothingTemplate_Header" xml:space="preserve">
    <value>Keine Vorlage</value>
  </data>
  <data name="NothingTemplate_Text" xml:space="preserve">
    <value>Ein leerer Graph ohne eine Vorlage.</value>
  </data>
  <data name="Schließen" xml:space="preserve">
    <value>Schließen</value>
  </data>
  <data name="Speichern" xml:space="preserve">
    <value>Speichern</value>
  </data>
  <data name="Speicherort" xml:space="preserve">
    <value>Speicherort:</value>
  </data>
  <data name="TabelleLaden" xml:space="preserve">
    <value>Lade die Tabelle des Graphen...</value>
  </data>
  <data name="TabSchließen" xml:space="preserve">
    <value>Schließe Tab</value>
  </data>
  <data name="Template" xml:space="preserve">
    <value>Vorlagen:</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Pollux - neues Fenster</value>
  </data>
  <data name="VieleckTemplate_Header" xml:space="preserve">
    <value>Vieleck</value>
  </data>
  <data name="VieleckTemplate_KnotenText" xml:space="preserve">
    <value>Anzahl an Knoten:</value>
  </data>
  <data name="VieleckTemplate_Text" xml:space="preserve">
    <value>Ein Vieleck mit n-Knoten.</value>
  </data>
  <data name="VollständigesVieleckTemplate_Header" xml:space="preserve">
    <value>Vollständiges Vieleck</value>
  </data>
  <data name="VollständigesVieleckTemplate_KnotenText" xml:space="preserve">
    <value>Anzahl an Knoten:</value>
  </data>
  <data name="VollständigesVieleckTemplate_Text" xml:space="preserve">
    <value>Ein Vollständiges Vieleck mit n-Knoten.</value>
  </data>
  <data name="Weg" xml:space="preserve">
    <value>Speicherort</value>
  </data>
  <data name="Wert" xml:space="preserve">
    <value>Wert</value>
  </data>
  <data name="Willkommen" xml:space="preserve">
    <value>Willkommen!</value>
  </data>
  <data name="Willkommenstext" xml:space="preserve">
    <value>Herzlich Willkommen bei Pollux!</value>
  </data>
  <data name="Willkommenstext2" xml:space="preserve">
    <value>Lasst uns loslegen, indem wir einen neuen Graphen erstellen.</value>
  </data>
  <data name="ZwischenTabsSpringen" xml:space="preserve">
    <value>Zwischen Tabs springen</value>
  </data>
  <data name="Öffnen" xml:space="preserve">
    <value>Öffnen</value>
  </data>
  <data name="Überstezen" xml:space="preserve">
    <value>Übersetzen der Texte...</value>
  </data>
</root>